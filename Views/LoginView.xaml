<Window x:Class="MyRetailStore.Views.LoginView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:components='clr-namespace:MyRetailStore.Views.UserControlView'
        xmlns:vm='clr-namespace:MyRetailStore.ViewModels'
        xmlns:local="clr-namespace:MyRetailStore.Views"
        mc:Ignorable="d" WindowStyle="None" Background='Yellow' WindowStartupLocation='CenterScreen' AllowsTransparency="True" Topmost="True"
        Title="LoginView" Height="500" Width="800"  Visibility='{Binding LoginViewVisiblity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}' Icon='/Images/retail.png'>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="1.5*" />
        </Grid.ColumnDefinitions>
        <Button VerticalAlignment="top" HorizontalAlignment="Right" Background="Transparent" Grid.Column="1"  BorderBrush="Transparent"
                 Command="{Binding CloseCommand}" CommandParameter="CloseApp" Panel.ZIndex="1" Margin="0 5 5 0" >
            <Image Source="/Images/MicrosoftTeams-image (6).png" Height="30" Width="30" />
        </Button>

        <!-- first coloumn-->
        <Border CornerRadius="150 0 0 10">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#3AA9AD" Offset="0" />
                    <GradientStop Color="#3AADA1" Offset="1" />
                </LinearGradientBrush>
            </Border.Background>
            <Grid>
                <Canvas>
                    <Polygon Points="0, 20 230, 140 0, 270" Fill="#4EB1B6" />
                    <Polygon Points="100, 400 200, 370 180, 470" Fill="#4EB1B6" />
                    <Ellipse Width="40" Height="40" Fill="#4EB1B6" RenderTransformOrigin="-2.806,0.235" Canvas.Top="430" Canvas.Left="250" />
                    <Ellipse Margin="50 400 0 0" Width="20" Height="20" Fill="#4EB1B6" />
                </Canvas>
                <StackPanel VerticalAlignment="Center">
                    <TextBlock Text="Retail Store" Style="{DynamicResource titleText}" />
                    <TextBlock Text="Hi Buddy! You can manage your store through this Application. Happy Management!" Style="{DynamicResource normalText}" Opacity="0.8" Margin="20 30" />
                    <Image Source="/Images/retail.png" Width="206" Height="111" />
                </StackPanel>
            </Grid>
        </Border>


        <Border Background="#ffffff" Grid.Column="1" CornerRadius="0 10 10 0">


            <StackPanel VerticalAlignment="Center" >

                <TextBlock Text="  W  E  L  C  O  M  E   " Style="{DynamicResource titleText}" Foreground="#3AB19B" Width="450"  >
                    <TextBlock.Effect>
                        <DropShadowEffect Color="black" Opacity="1" RenderingBias="Quality" ShadowDepth="3.5" BlurRadius="7" />
                    </TextBlock.Effect>
                    <TextBlock.RenderTransform>
                        <TranslateTransform x:Name="MyFadingText" X="0" Y="0"/>
                    </TextBlock.RenderTransform>
                    <TextBlock.Triggers >
                        <EventTrigger RoutedEvent="TextBlock.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="MyFadingText"
                                         Storyboard.TargetProperty="X"
                                         From="0" To="50" Duration="0:0:1" AutoReverse="True"
                                         RepeatBehavior="Forever"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </TextBlock.Triggers>
                </TextBlock>
                <StackPanel Orientation="Horizontal" Margin="0 20" HorizontalAlignment="Center">
                    <Button Style="{DynamicResource buttonCircle}">
                        <Image Source="/Images/retail1.png" Width="30" Height="30" />
                    </Button>
                    <Button Style="{DynamicResource buttonCircle}">
                        <Image Source="/Images/retail2.png" Width="30" Height="30" />
                    </Button>
                    <Button Style="{DynamicResource buttonCircle}">
                        <Image Source="/Images/retail3.png" Width="30" Height="30" />
                    </Button>
                </StackPanel>
                <Border BorderThickness="2" BorderBrush="#acb0af" Margin="70 7" CornerRadius="5">
                    <Grid Margin="7 9">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Image Source="/Images/User.png" Height="30"  Margin="0,0,0,5" />
                        <TextBlock x:Name="textEmail" Text="Username" Style="{DynamicResource textHint}" Grid.Column="0" VerticalAlignment="Bottom" Margin="0,0,0,-6" />
                        <TextBox x:Name="txtEmail" BorderBrush="Gray" Padding="0 4 0 0"  BorderThickness="0.7"
                                 Text='{Binding Username, Mode=Default, UpdateSourceTrigger=PropertyChanged}' Style="{DynamicResource textBox}"
                                 Grid.ColumnSpan="2" Grid.Column="1" Margin="10 0 0 0" />
                    </Grid>
                </Border>
                <Border BorderThickness="2" BorderBrush="#acb0af" Margin="70 7" CornerRadius="5">
                    <Grid Margin="7 9">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Image Source="/Images/Lock.png" Height="30" Margin="-9,-10,9,10" />
                        <TextBlock x:Name="textPassword" Text="Password" Style="{DynamicResource textHint}" Grid.Column="0" Margin="0,15,10,-15" />
                        <components:BindablePasswordBox Style="{DynamicResource textBox}" Padding="0 4 0 0" Password='{Binding Password, Mode=Default, UpdateSourceTrigger=PropertyChanged}' />


                    </Grid>
                </Border>
                <Button Content="Login" Command='{Binding LogInCommand}' CommandParameter='LogInCommand' Style="{DynamicResource mainbutton}" />
            </StackPanel>
        </Border>

    </Grid>
    <!--#region Styles-->
    <Window.Resources>
        <Style x:Key="titleText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="36" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#ffffff" />
        </Style>
        <Style x:Key="normalText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="LineHeight" Value="28" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#ffffff" />
        </Style>
        <Style x:Key="buttonCircle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Margin" Value="8.0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="30" BorderThickness="1" BorderBrush="#878787" Padding="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="HotPink" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="Cyan" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="textHint" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Panel.ZIndex" Value="1" />
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="Foreground" Value="#acb0af" />
        </Style>
        <Style x:Key="textBox" TargetType="Control">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Height" Value="30"/>
            <Setter Property="Foreground" Value="#878787" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style x:Key="mainbutton" TargetType="Button">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Margin" Value="0 20 0 0" />
            <Setter Property="Background" Value="#3AB19B" />
            <Setter Property="Foreground" Value="#FDFEFE" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderThickness="1" BorderBrush="#49B7A3" Padding="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#339685" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#2d7a6c" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <!--#endregion-->


</Window>